{
  "address": "0xC0cc30cC09387139b300234768C3d9819f22Ac26",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "_tokens",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "_formulas",
          "type": "address[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "ChangedOwner",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "formula",
          "type": "address"
        }
      ],
      "name": "TokenFormulaUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "TokenRemoved",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "changeOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "removeToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "formula",
          "type": "address"
        }
      ],
      "name": "setTokenFormula",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "tokenFormulas",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x5bcfc952b66ebb094fe1ba20005a241cd107d36a0b7366d164225cada2958469",
  "receipt": {
    "to": null,
    "from": "0x62E0D8E38297E4A50D5abBb822CA7548b7d2F9ca",
    "contractAddress": "0xC0cc30cC09387139b300234768C3d9819f22Ac26",
    "transactionIndex": 10,
    "gasUsed": "408843",
    "logsBloom": "0x
    "blockHash": "0xc17c6637b9d57df19f22f8db171fee36668d3a90c0875d27466aff252352d5a5",
    "transactionHash": "0x5bcfc952b66ebb094fe1ba20005a241cd107d36a0b7366d164225cada2958469",
    "logs": [
      {
        "transactionIndex": 10,
        "blockNumber": 11914129,
        "transactionHash": "0x5bcfc952b66ebb094fe1ba20005a241cd107d36a0b7366d164225cada2958469",
        "address": "0xC0cc30cC09387139b300234768C3d9819f22Ac26",
        "topics": [
          "0xbe88140e48d23d6599570a0b245c3dac61bd4efb4f875e619c5d7d86513bb2f6",
          "0x0000000000000000000000001f3f9d3068568f8040775be2e8c03c103c61f3af",
          "0x00000000000000000000000068cb730510e9821553fc4646aceb51758e3a65de"
        ],
        "data": "0x",
        "logIndex": 14,
        "blockHash": "0xc17c6637b9d57df19f22f8db171fee36668d3a90c0875d27466aff252352d5a5"
      },
      {
        "transactionIndex": 10,
        "blockNumber": 11914129,
        "transactionHash": "0x5bcfc952b66ebb094fe1ba20005a241cd107d36a0b7366d164225cada2958469",
        "address": "0xC0cc30cC09387139b300234768C3d9819f22Ac26",
        "topics": [
          "0xbe88140e48d23d6599570a0b245c3dac61bd4efb4f875e619c5d7d86513bb2f6",
          "0x0000000000000000000000004441eb3076f828d5176f4fe74d7c775542dae106",
          "0x000000000000000000000000a6e743af491b0f0070fa9da52ed0d0ee527acb32"
        ],
        "data": "0x",
        "logIndex": 15,
        "blockHash": "0xc17c6637b9d57df19f22f8db171fee36668d3a90c0875d27466aff252352d5a5"
      },
      {
        "transactionIndex": 10,
        "blockNumber": 11914129,
        "transactionHash": "0x5bcfc952b66ebb094fe1ba20005a241cd107d36a0b7366d164225cada2958469",
        "address": "0xC0cc30cC09387139b300234768C3d9819f22Ac26",
        "topics": [
          "0x2748503f8f31d8071821d1d5144384ba6a465036cda17fa1629a8a2509ccee0e",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000013d5b8fc84f73fc5a0a5832aa8373044371314d3"
        ],
        "data": "0x",
        "logIndex": 16,
        "blockHash": "0xc17c6637b9d57df19f22f8db171fee36668d3a90c0875d27466aff252352d5a5"
      }
    ],
    "blockNumber": 11914129,
    "cumulativeGasUsed": "963956",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x13d5B8Fc84F73fc5a0A5832Aa8373044371314d3",
    [
      "0x1F3f9D3068568F8040775be2e8C03C103C61f3aF",
      "0x4441eb3076f828D5176f4Fe74d7c775542daE106"
    ],
    [
      "0x68CB730510E9821553FC4646AcEB51758e3A65dE",
      "0xa6e743Af491b0f0070fa9Da52ED0D0ee527AcB32"
    ]
  ],
  "solcInputHash": "e436654795b970829e450bb7880e4b01",
  "metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"_formulas\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"ChangedOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"formula\",\"type\":\"address\"}],\"name\":\"TokenFormulaUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"TokenRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"removeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"formula\",\"type\":\"address\"}],\"name\":\"setTokenFormula\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenFormulas\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Registry of tokens that Archer supports as stake for voting power  + their respective conversion formulas\",\"kind\":\"dev\",\"methods\":{\"changeOwner(address)\":{\"params\":{\"newOwner\":\"New owner address\"}},\"constructor\":{\"params\":{\"_formulas\":\"formula contracts for initial tokens\",\"_owner\":\"contract owner\",\"_tokens\":\"initially supported tokens\"}},\"removeToken(address)\":{\"params\":{\"token\":\"token address to remove\"}},\"setTokenFormula(address,address)\":{\"params\":{\"formula\":\"address of formula contract\",\"token\":\"token for formula\"}}},\"title\":\"TokenRegistry\",\"version\":1},\"userdoc\":{\"events\":{\"ChangedOwner(address,address)\":{\"notice\":\"Event emitted when the owner of the contract is updated\"},\"TokenFormulaUpdated(address,address)\":{\"notice\":\"Event emitted when a token formula is updated\"},\"TokenRemoved(address)\":{\"notice\":\"Event emitted when a supported token is removed\"}},\"kind\":\"user\",\"methods\":{\"changeOwner(address)\":{\"notice\":\"Change owner of token registry contract\"},\"constructor\":{\"notice\":\"Construct a new token registry contract\"},\"owner()\":{\"notice\":\"Current owner of this contract\"},\"removeToken(address)\":{\"notice\":\"Remove conversion formula address for token\"},\"setTokenFormula(address,address)\":{\"notice\":\"Set conversion formula address for token\"},\"tokenFormulas(address)\":{\"notice\":\"mapping of tokens to voting power calculation (formula) smart contract addresses\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TokenRegistry.sol\":\"TokenRegistry\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[]},\"sources\":{\"contracts/TokenRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.7.0;\\n\\n/**\\n * @title TokenRegistry\\n * @dev Registry of tokens that Archer supports as stake for voting power \\n * + their respective conversion formulas\\n */\\ncontract TokenRegistry {\\n\\n    /// @notice Current owner of this contract\\n    address public owner;\\n\\n    /// @notice mapping of tokens to voting power calculation (formula) smart contract addresses\\n    mapping (address => address) public tokenFormulas;\\n\\n    /// @notice Event emitted when the owner of the contract is updated\\n    event ChangedOwner(address indexed oldOwner, address indexed newOwner);\\n\\n    /// @notice Event emitted when a token formula is updated\\n    event TokenFormulaUpdated(address indexed token, address indexed formula);\\n\\n    /// @notice Event emitted when a supported token is removed\\n    event TokenRemoved(address indexed token);\\n\\n    /// @notice only owner can call function\\n    modifier onlyOwner {\\n        require(msg.sender == owner, \\\"not owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @notice Construct a new token registry contract\\n     * @param _owner contract owner\\n     * @param _tokens initially supported tokens\\n     * @param _formulas formula contracts for initial tokens\\n     */\\n    constructor(\\n        address _owner, \\n        address[] memory _tokens, \\n        address[] memory _formulas\\n    ) {\\n        require(_tokens.length == _formulas.length, \\\"TR::constructor: not same length\\\");\\n        for (uint i = 0; i < _tokens.length; i++) {\\n            tokenFormulas[_tokens[i]] = _formulas[i];\\n            emit TokenFormulaUpdated(_tokens[i], _formulas[i]);\\n        }\\n        owner = _owner;\\n        emit ChangedOwner(address(0), owner);\\n    }\\n\\n    /**\\n     * @notice Set conversion formula address for token\\n     * @param token token for formula\\n     * @param formula address of formula contract\\n     */\\n    function setTokenFormula(address token, address formula) external onlyOwner {\\n        tokenFormulas[token] = formula;\\n        emit TokenFormulaUpdated(token, formula);\\n    }\\n\\n    /**\\n     * @notice Remove conversion formula address for token\\n     * @param token token address to remove\\n     */\\n    function removeToken(address token) external onlyOwner {\\n        tokenFormulas[token] = address(0);\\n        emit TokenRemoved(token);\\n    }\\n\\n    /**\\n     * @notice Change owner of token registry contract\\n     * @param newOwner New owner address\\n     */\\n    function changeOwner(address newOwner) external onlyOwner {\\n        emit ChangedOwner(owner, newOwner);\\n        owner = newOwner;\\n    }\\n}\",\"keccak256\":\"0xec1a45075f31381e7da218786436cdc8617cb6283313bd2511b573dda1f967dc\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516107e93803806107e98339818101604052606081101561003357600080fd5b81516020830180516040519294929383019291908464010000000082111561005a57600080fd5b90830190602082018581111561006f57600080fd5b825186602082028301116401000000008211171561008c57600080fd5b82525081516020918201928201910280838360005b838110156100b95781810151838201526020016100a1565b50505050905001604052602001805160405193929190846401000000008211156100e257600080fd5b9083019060208201858111156100f757600080fd5b825186602082028301116401000000008211171561011457600080fd5b82525081516020918201928201910280838360005b83811015610141578181015183820152602001610129565b5050505090500160405250505080518251146101a4576040805162461bcd60e51b815260206004820181905260248201527f54523a3a636f6e7374727563746f723a206e6f742073616d65206c656e677468604482015290519081900360640190fd5b60005b825181101561028e578181815181106101bc57fe5b6020026020010151600160008584815181106101d457fe5b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b0316021790555081818151811061022c57fe5b60200260200101516001600160a01b031683828151811061024957fe5b60200260200101516001600160a01b03167fbe88140e48d23d6599570a0b245c3dac61bd4efb4f875e619c5d7d86513bb2f660405160405180910390a36001016101a7565b50600080546001600160a01b0319166001600160a01b0385811691909117808355604051911691907f2748503f8f31d8071821d1d5144384ba6a465036cda17fa1629a8a2509ccee0e908290a35050506104fc806102ed6000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c80638da5cb5b116100505780638da5cb5b146100dc578063a6f9dae11461010d578063d419935f1461014057610067565b8063190ddf041461006c5780635fa7b584146100a9575b600080fd5b6100a76004803603604081101561008257600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81358116916020013516610173565b005b6100a7600480360360208110156100bf57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610275565b6100e461036f565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6100a76004803603602081101561012357600080fd5b503573ffffffffffffffffffffffffffffffffffffffff1661038b565b6100e46004803603602081101561015657600080fd5b503573ffffffffffffffffffffffffffffffffffffffff1661049e565b60005473ffffffffffffffffffffffffffffffffffffffff1633146101f957604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f6e6f74206f776e65720000000000000000000000000000000000000000000000604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff82811660008181526001602052604080822080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169486169485179055517fbe88140e48d23d6599570a0b245c3dac61bd4efb4f875e619c5d7d86513bb2f69190a35050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146102fb57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f6e6f74206f776e65720000000000000000000000000000000000000000000000604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff811660008181526001602052604080822080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055517f4c910b69fe65a61f7531b9c5042b2329ca7179c77290aa7e2eb3afa3c8511fd39190a250565b60005473ffffffffffffffffffffffffffffffffffffffff1681565b60005473ffffffffffffffffffffffffffffffffffffffff16331461041157604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f6e6f74206f776e65720000000000000000000000000000000000000000000000604482015290519081900360640190fd5b6000805460405173ffffffffffffffffffffffffffffffffffffffff808516939216917f2748503f8f31d8071821d1d5144384ba6a465036cda17fa1629a8a2509ccee0e91a3600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60016020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff168156fea2646970667358221220e33cb34893da995845b0a6dfdd44bddfd368347eaaf7c1f9e93dba11fbb0b7f464736f6c63430007040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100675760003560e01c80638da5cb5b116100505780638da5cb5b146100dc578063a6f9dae11461010d578063d419935f1461014057610067565b8063190ddf041461006c5780635fa7b584146100a9575b600080fd5b6100a76004803603604081101561008257600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81358116916020013516610173565b005b6100a7600480360360208110156100bf57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610275565b6100e461036f565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6100a76004803603602081101561012357600080fd5b503573ffffffffffffffffffffffffffffffffffffffff1661038b565b6100e46004803603602081101561015657600080fd5b503573ffffffffffffffffffffffffffffffffffffffff1661049e565b60005473ffffffffffffffffffffffffffffffffffffffff1633146101f957604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f6e6f74206f776e65720000000000000000000000000000000000000000000000604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff82811660008181526001602052604080822080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169486169485179055517fbe88140e48d23d6599570a0b245c3dac61bd4efb4f875e619c5d7d86513bb2f69190a35050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146102fb57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f6e6f74206f776e65720000000000000000000000000000000000000000000000604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff811660008181526001602052604080822080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055517f4c910b69fe65a61f7531b9c5042b2329ca7179c77290aa7e2eb3afa3c8511fd39190a250565b60005473ffffffffffffffffffffffffffffffffffffffff1681565b60005473ffffffffffffffffffffffffffffffffffffffff16331461041157604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f6e6f74206f776e65720000000000000000000000000000000000000000000000604482015290519081900360640190fd5b6000805460405173ffffffffffffffffffffffffffffffffffffffff808516939216917f2748503f8f31d8071821d1d5144384ba6a465036cda17fa1629a8a2509ccee0e91a3600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60016020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff168156fea2646970667358221220e33cb34893da995845b0a6dfdd44bddfd368347eaaf7c1f9e93dba11fbb0b7f464736f6c63430007040033",
  "devdoc": {
    "details": "Registry of tokens that Archer supports as stake for voting power  + their respective conversion formulas",
    "kind": "dev",
    "methods": {
      "changeOwner(address)": {
        "params": {
          "newOwner": "New owner address"
        }
      },
      "constructor": {
        "params": {
          "_formulas": "formula contracts for initial tokens",
          "_owner": "contract owner",
          "_tokens": "initially supported tokens"
        }
      },
      "removeToken(address)": {
        "params": {
          "token": "token address to remove"
        }
      },
      "setTokenFormula(address,address)": {
        "params": {
          "formula": "address of formula contract",
          "token": "token for formula"
        }
      }
    },
    "title": "TokenRegistry",
    "version": 1
  },
  "userdoc": {
    "events": {
      "ChangedOwner(address,address)": {
        "notice": "Event emitted when the owner of the contract is updated"
      },
      "TokenFormulaUpdated(address,address)": {
        "notice": "Event emitted when a token formula is updated"
      },
      "TokenRemoved(address)": {
        "notice": "Event emitted when a supported token is removed"
      }
    },
    "kind": "user",
    "methods": {
      "changeOwner(address)": {
        "notice": "Change owner of token registry contract"
      },
      "constructor": {
        "notice": "Construct a new token registry contract"
      },
      "owner()": {
        "notice": "Current owner of this contract"
      },
      "removeToken(address)": {
        "notice": "Remove conversion formula address for token"
      },
      "setTokenFormula(address,address)": {
        "notice": "Set conversion formula address for token"
      },
      "tokenFormulas(address)": {
        "notice": "mapping of tokens to voting power calculation (formula) smart contract addresses"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 5,
        "contract": "contracts/TokenRegistry.sol:TokenRegistry",
        "label": "owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 10,
        "contract": "contracts/TokenRegistry.sol:TokenRegistry",
        "label": "tokenFormulas",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_address)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      }
    }
  }
}